{"ast":null,"code":"var _jsxFileName = \"/Users/admin/srv/blest-js/examples/client/react/src/blest-react.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useState, useEffect, useRef, createContext, useContext, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlestContext = /*#__PURE__*/createContext();\nexport const BlestProvider = _ref => {\n  _s();\n  let {\n    children,\n    url,\n    options = {}\n  } = _ref;\n  const [queue, setQueue] = useState([]);\n  const [state, setState] = useState({});\n  const timeout = useRef();\n  const enqueue = useCallback((id, name, variables, options) => {\n    if (timeout.current) clearTimeout(timeout.current);\n    setState(state => {\n      return {\n        ...state,\n        [id]: {\n          loading: false,\n          error: null,\n          data: null\n        }\n      };\n    });\n    setQueue(queue => [...queue, [id, name, variables, options]]);\n  }, []);\n  useEffect(() => {\n    if (queue.length > 0) {\n      const myQueue = queue.map(q => [...q]);\n      const requestIds = queue.map(q => q[0]);\n      setQueue([]);\n      timeout.current = setTimeout(() => {\n        setState(state => {\n          const newState = {\n            ...state\n          };\n          for (let i = 0; i < requestIds.length; i++) {\n            const id = requestIds[i];\n            newState[id] = {\n              loading: true,\n              error: null,\n              data: null\n            };\n          }\n          return newState;\n        });\n        fetch(url, {\n          ...options,\n          body: JSON.stringify(myQueue),\n          mode: 'cors',\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(async result => {\n          const results = await result.json();\n          setState(state => {\n            const newState = {\n              ...state\n            };\n            for (let i = 0; i < results.length; i++) {\n              const item = results[i];\n              newState[item[0]] = {\n                loading: false,\n                error: item[3],\n                data: item[2]\n              };\n            }\n            return newState;\n          });\n        }).catch(error => {\n          setState(state => {\n            const newState = {\n              ...state\n            };\n            for (let i = 0; i < myQueue.length; i++) {\n              const id = requestIds[i];\n              newState[id] = {\n                loading: false,\n                error: error,\n                data: null\n              };\n            }\n            return newState;\n          });\n        });\n      }, 1);\n    }\n  }, [queue, url, options]);\n  return /*#__PURE__*/_jsxDEV(BlestContext.Provider, {\n    value: {\n      queue,\n      state,\n      enqueue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(BlestProvider, \"mBYkQWTTurMinYl6WMCQZQsZys8=\");\n_c = BlestProvider;\nexport const useBlestContext = () => {\n  _s2();\n  const context = useContext(BlestContext);\n  useEffect(() => {\n    console.warn('useBlestContext() is a utility function for debugging');\n  }, []);\n  return context;\n};\n_s2(useBlestContext, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\nexport const useBlestRequest = (name, variables, options) => {\n  _s3();\n  const {\n    state,\n    enqueue\n  } = useContext(BlestContext);\n  const [requestId, setRequestId] = useState(null);\n  const queryState = requestId && state[requestId];\n  const lastRequest = useRef();\n  useEffect(() => {\n    const requestHash = name + JSON.stringify(variables || {}) + JSON.stringify(options || {});\n    if (lastRequest.current === requestHash) return;\n    lastRequest.current = requestHash;\n    const id = uuidv4();\n    enqueue(id, name, variables, options);\n    setRequestId(id);\n  }, [name, variables, options, enqueue]);\n  return queryState || {};\n};\n_s3(useBlestRequest, \"tvUzPbx6whaHAnCm4olgYtoZgQk=\");\nexport const useBlestCommand = (name, options) => {\n  _s4();\n  const {\n    state,\n    enqueue\n  } = useContext(BlestContext);\n  const [requestId, setRequestId] = useState(null);\n  const queryState = requestId && state[requestId];\n  const request = useCallback(variables => {\n    const id = Math.round(Math.random() * 1000000).toString();\n    enqueue(id, name, variables, options);\n    setRequestId(id);\n  }, [name, options, enqueue, setRequestId]);\n  return [request, queryState || {}];\n};\n_s4(useBlestCommand, \"yXByavvjwL9+LEBdvQ1zFKv6ZGs=\");\nvar _c;\n$RefreshReg$(_c, \"BlestProvider\");","map":{"version":3,"names":["useState","useEffect","useRef","createContext","useContext","useCallback","v4","uuidv4","jsxDEV","_jsxDEV","BlestContext","BlestProvider","_ref","_s","children","url","options","queue","setQueue","state","setState","timeout","enqueue","id","name","variables","current","clearTimeout","loading","error","data","length","myQueue","map","q","requestIds","setTimeout","newState","i","fetch","body","JSON","stringify","mode","method","headers","then","result","results","json","item","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useBlestContext","_s2","context","console","warn","useBlestRequest","_s3","requestId","setRequestId","queryState","lastRequest","requestHash","useBlestCommand","_s4","request","Math","round","random","toString","$RefreshReg$"],"sources":["/Users/admin/srv/blest-js/examples/client/react/src/blest-react.js"],"sourcesContent":["import { useState, useEffect, useRef, createContext, useContext, useCallback } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst BlestContext = createContext()\n\nexport const BlestProvider = ({ children, url, options = {} }) => {\n\n  const [queue, setQueue] = useState([])\n  const [state, setState] = useState({})\n\n  const timeout = useRef()\n\n  const enqueue = useCallback((id, name, variables, options) => {\n    if (timeout.current) clearTimeout(timeout.current)\n    setState((state) => {\n      return {\n        ...state,\n        [id]: {\n          loading: false,\n          error: null,\n          data: null\n        }\n      }\n    })\n    setQueue((queue) => [...queue, [id, name, variables, options]])\n  }, [])\n  \n  useEffect(() => {\n    if (queue.length > 0) {\n      const myQueue = queue.map((q) => [...q])\n      const requestIds = queue.map((q) => q[0])\n      setQueue([])\n      timeout.current = setTimeout(() => {\n        setState((state) => {\n          const newState = {\n            ...state\n          }\n          for (let i = 0; i < requestIds.length; i++) {\n            const id = requestIds[i]\n            newState[id] = {\n              loading: true,\n              error: null,\n              data: null\n            }\n          }\n          return newState\n        })\n        fetch(url, {\n          ...options,\n          body: JSON.stringify(myQueue),\n          mode: 'cors',\n          method: 'POST',\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        })\n        .then(async (result) => {\n          const results = await result.json()\n          setState((state) => {\n            const newState = {\n              ...state\n            }\n            for (let i = 0; i < results.length; i++) {\n              const item = results[i]\n              newState[item[0]] = {\n                loading: false,\n                error: item[3],\n                data: item[2]\n              }\n            }\n            return newState\n          })\n        })\n        .catch((error) => {\n          setState((state) => {\n            const newState = {\n              ...state\n            }\n            for (let i = 0; i < myQueue.length; i++) {\n              const id = requestIds[i]\n              newState[id] = {\n                loading: false,\n                error: error,\n                data: null\n              }\n            }\n            return newState\n          })\n        })\n      }, 1)\n    }\n  }, [queue, url, options])\n\n  return (\n    <BlestContext.Provider value={{ queue, state, enqueue }}>\n      {children}\n    </BlestContext.Provider>\n  )\n\n}\n\nexport const useBlestContext = () => {\n\n  const context = useContext(BlestContext)\n\n  useEffect(() => {\n    console.warn('useBlestContext() is a utility function for debugging')\n  }, [])\n\n  return context\n\n}\n\nexport const useBlestRequest = (name, variables, options) => {\n\n  const { state, enqueue } = useContext(BlestContext)\n  const [requestId, setRequestId] = useState(null)\n  const queryState = requestId && state[requestId]\n  const lastRequest = useRef()\n\n  useEffect(() => {\n    const requestHash = name + JSON.stringify(variables || {}) + JSON.stringify(options || {})\n    if (lastRequest.current === requestHash) return;\n    lastRequest.current = requestHash\n    const id = uuidv4()\n    enqueue(id, name, variables, options)\n    setRequestId(id)\n  }, [name, variables, options, enqueue])\n\n  return queryState || {}\n\n}\n\nexport const useBlestCommand = (name, options) => {\n  \n  const { state, enqueue } = useContext(BlestContext)\n  const [requestId, setRequestId] = useState(null)\n  const queryState = requestId && state[requestId]\n\n  const request = useCallback((variables) => {\n    const id = Math.round(Math.random() * 1000000).toString()\n    enqueue(id, name, variables, options)\n    setRequestId(id)\n  }, [name, options, enqueue, setRequestId])\n\n  return [request, queryState || {}]\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}