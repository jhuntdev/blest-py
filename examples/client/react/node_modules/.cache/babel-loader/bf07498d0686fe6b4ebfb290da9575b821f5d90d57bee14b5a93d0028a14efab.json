{"ast":null,"code":"var _jsxFileName = \"/Users/admin/srv/flex-js/examples/client/react/src/flex-react.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useState, useEffect, useRef, createContext, useContext, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlexContext = /*#__PURE__*/createContext();\nexport const FlexProvider = _ref => {\n  _s();\n  let {\n    children,\n    url,\n    options\n  } = _ref;\n  const [queue, setQueue] = useState([]);\n  const [state, setState] = useState({});\n  const timeout = useRef();\n  const enqueue = useCallback((id, name, variables, options) => {\n    if (timeout.current) clearTimeout(timeout.current);\n    setState(state => {\n      return {\n        ...state,\n        [id]: {\n          loading: false,\n          error: null,\n          data: null\n        }\n      };\n    });\n    setQueue(queue => [...queue, [id, name, variables, options]]);\n  }, []);\n  useEffect(() => {\n    if (queue.length > 0) {\n      const myQueue = queue.map(q => [...q]);\n      setQueue([]);\n      timeout.current = setTimeout(() => {\n        setState(state => {\n          const newState = {\n            ...state\n          };\n          for (let i = 0; i < myQueue.length; i++) {\n            const item = myQueue[i];\n            newState[item[0]] = {\n              loading: true,\n              error: null,\n              data: null\n            };\n          }\n          return newState;\n        });\n        fetch({\n          ...options,\n          body: myQueue\n        }).then(async result => {\n          const results = await result.json();\n          setState(state => {\n            const newState = {\n              ...state\n            };\n            for (let i = 0; i < results.length; i++) {\n              const item = result[i];\n              newState[item[0]] = {\n                loading: false,\n                error: result[3],\n                data: result[2]\n              };\n            }\n            return newState;\n          });\n        }).catch(error => {\n          setState(state => {\n            const newState = {\n              ...state\n            };\n            for (let i = 0; i < myQueue.length; i++) {\n              const item = myQueue[i];\n              newState[item[0]] = {\n                loading: false,\n                error: error,\n                data: null\n              };\n            }\n            return newState;\n          });\n        });\n      }, 1);\n    }\n  }, [queue, options]);\n  return /*#__PURE__*/_jsxDEV(FlexContext.Provider, {\n    value: {\n      queue,\n      state,\n      enqueue\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(FlexProvider, \"mBYkQWTTurMinYl6WMCQZQsZys8=\");\n_c = FlexProvider;\nexport const useFlexContext = () => {\n  _s2();\n  const context = useContext(FlexContext);\n  console.warn('useFlexContext() is a utility function for debugging');\n  return context;\n};\n_s2(useFlexContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const useFlexRequest = (name, variables, options) => {\n  _s3();\n  const {\n    state,\n    enqueue\n  } = useContext(FlexContext);\n  const [requestId, setRequestId] = useState(null);\n  const queryState = requestId && state[requestId];\n  const lastRequest = useRef();\n  if (typeof name !== 'string') throw new Error('\"name\" prop should be a string');\n  useEffect(() => {\n    const requestHash = name + JSON.stringify(variables || {});\n    if (lastRequest.current === requestHash) return;\n    console.log('this');\n    lastRequest.current = requestHash;\n    const id = Math.round(Math.random() * 1000000).toString();\n    enqueue([id, name, variables, options]);\n    setRequestId(id);\n  }, [name, variables, options, enqueue]);\n  return queryState || {};\n};\n_s3(useFlexRequest, \"tvUzPbx6whaHAnCm4olgYtoZgQk=\");\nexport const useFlexCommand = (name, options) => {\n  _s4();\n  const {\n    state,\n    enqueue\n  } = useContext(FlexContext);\n  const [requestId, setRequestId] = useState(null);\n  const queryState = requestId && state[requestId];\n  const request = useCallback(variables => {\n    const id = Math.round(Math.random() * 1000000).toString();\n    enqueue([id, name, variables, options]);\n    setRequestId(id);\n  }, [name, options, enqueue, setRequestId]);\n  return [request, queryState || {}];\n};\n_s4(useFlexCommand, \"yXByavvjwL9+LEBdvQ1zFKv6ZGs=\");\nvar _c;\n$RefreshReg$(_c, \"FlexProvider\");","map":{"version":3,"names":["useState","useEffect","useRef","createContext","useContext","useCallback","jsxDEV","_jsxDEV","FlexContext","FlexProvider","_ref","_s","children","url","options","queue","setQueue","state","setState","timeout","enqueue","id","name","variables","current","clearTimeout","loading","error","data","length","myQueue","map","q","setTimeout","newState","i","item","fetch","body","then","result","results","json","catch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFlexContext","_s2","context","console","warn","useFlexRequest","_s3","requestId","setRequestId","queryState","lastRequest","Error","requestHash","JSON","stringify","log","Math","round","random","toString","useFlexCommand","_s4","request","$RefreshReg$"],"sources":["/Users/admin/srv/flex-js/examples/client/react/src/flex-react.js"],"sourcesContent":["import { useState, useEffect, useRef, createContext, useContext, useCallback } from 'react'\n\nconst FlexContext = createContext()\n\nexport const FlexProvider = ({ children, url, options }) => {\n\n  const [queue, setQueue] = useState([])\n  const [state, setState] = useState({})\n\n  const timeout = useRef()\n\n  const enqueue = useCallback((id, name, variables, options) => {\n    if (timeout.current) clearTimeout(timeout.current)\n    setState((state) => {\n      return {\n        ...state,\n        [id]: {\n          loading: false,\n          error: null,\n          data: null\n        }\n      }\n    })\n    setQueue((queue) => [...queue, [id, name, variables, options]])\n  }, [])\n  \n  useEffect(() => {\n    if (queue.length > 0) {\n      const myQueue = queue.map((q) => [...q])\n      setQueue([])\n      timeout.current = setTimeout(() => {\n        setState((state) => {\n          const newState = {\n            ...state\n          }\n          for (let i = 0; i < myQueue.length; i++) {\n            const item = myQueue[i]\n            newState[item[0]] = {\n              loading: true,\n              error: null,\n              data: null\n            }\n          }\n          return newState\n        })\n        fetch({\n          ...options,\n          body: myQueue\n        })\n        .then(async (result) => {\n          const results = await result.json()\n          setState((state) => {\n            const newState = {\n              ...state\n            }\n            for (let i = 0; i < results.length; i++) {\n              const item = result[i]\n              newState[item[0]] = {\n                loading: false,\n                error: result[3],\n                data: result[2]\n              }\n            }\n            return newState\n          })\n        })\n        .catch((error) => {\n          setState((state) => {\n            const newState = {\n              ...state\n            }\n            for (let i = 0; i < myQueue.length; i++) {\n              const item = myQueue[i]\n              newState[item[0]] = {\n                loading: false,\n                error: error,\n                data: null\n              }\n            }\n            return newState\n          })\n        })\n      }, 1)\n    }\n  }, [queue, options])\n\n  return (\n    <FlexContext.Provider value={{ queue, state, enqueue }}>\n      {children}\n    </FlexContext.Provider>\n  )\n\n}\n\nexport const useFlexContext = () => {\n\n  const context = useContext(FlexContext)\n\n  console.warn('useFlexContext() is a utility function for debugging')\n\n  return context\n\n}\n\nexport const useFlexRequest = (name, variables, options) => {\n\n  const { state, enqueue } = useContext(FlexContext)\n  const [requestId, setRequestId] = useState(null)\n  const queryState = requestId && state[requestId]\n  const lastRequest = useRef()\n\n  if (typeof name !== 'string') throw new Error('\"name\" prop should be a string')\n\n  useEffect(() => {\n    const requestHash = name + JSON.stringify(variables || {})\n    if (lastRequest.current === requestHash) return;\n    console.log('this')\n    lastRequest.current = requestHash\n    const id = Math.round(Math.random() * 1000000).toString()\n    enqueue([id, name, variables, options])\n    setRequestId(id)\n  }, [name, variables, options, enqueue])\n\n  return queryState || {}\n\n}\n\nexport const useFlexCommand = (name, options) => {\n  \n  const { state, enqueue } = useContext(FlexContext)\n  const [requestId, setRequestId] = useState(null)\n  const queryState = requestId && state[requestId]\n\n  const request = useCallback((variables) => {\n    const id = Math.round(Math.random() * 1000000).toString()\n    enqueue([id, name, variables, options])\n    setRequestId(id)\n  }, [name, options, enqueue, setRequestId])\n\n  return [request, queryState || {}]\n}"],"mappings":";;;;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,aAAa,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3F,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAErD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMmB,OAAO,GAAGjB,MAAM,CAAC,CAAC;EAExB,MAAMkB,OAAO,GAAGf,WAAW,CAAC,CAACgB,EAAE,EAAEC,IAAI,EAAEC,SAAS,EAAET,OAAO,KAAK;IAC5D,IAAIK,OAAO,CAACK,OAAO,EAAEC,YAAY,CAACN,OAAO,CAACK,OAAO,CAAC;IAClDN,QAAQ,CAAED,KAAK,IAAK;MAClB,OAAO;QACL,GAAGA,KAAK;QACR,CAACI,EAAE,GAAG;UACJK,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE,IAAI;UACXC,IAAI,EAAE;QACR;MACF,CAAC;IACH,CAAC,CAAC;IACFZ,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAE,CAACM,EAAE,EAAEC,IAAI,EAAEC,SAAS,EAAET,OAAO,CAAC,CAAC,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIc,KAAK,CAACc,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,OAAO,GAAGf,KAAK,CAACgB,GAAG,CAAEC,CAAC,IAAK,CAAC,GAAGA,CAAC,CAAC,CAAC;MACxChB,QAAQ,CAAC,EAAE,CAAC;MACZG,OAAO,CAACK,OAAO,GAAGS,UAAU,CAAC,MAAM;QACjCf,QAAQ,CAAED,KAAK,IAAK;UAClB,MAAMiB,QAAQ,GAAG;YACf,GAAGjB;UACL,CAAC;UACD,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACD,MAAM,EAAEM,CAAC,EAAE,EAAE;YACvC,MAAMC,IAAI,GAAGN,OAAO,CAACK,CAAC,CAAC;YACvBD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;cAClBV,OAAO,EAAE,IAAI;cACbC,KAAK,EAAE,IAAI;cACXC,IAAI,EAAE;YACR,CAAC;UACH;UACA,OAAOM,QAAQ;QACjB,CAAC,CAAC;QACFG,KAAK,CAAC;UACJ,GAAGvB,OAAO;UACVwB,IAAI,EAAER;QACR,CAAC,CAAC,CACDS,IAAI,CAAC,MAAOC,MAAM,IAAK;UACtB,MAAMC,OAAO,GAAG,MAAMD,MAAM,CAACE,IAAI,CAAC,CAAC;UACnCxB,QAAQ,CAAED,KAAK,IAAK;YAClB,MAAMiB,QAAQ,GAAG;cACf,GAAGjB;YACL,CAAC;YACD,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,OAAO,CAACZ,MAAM,EAAEM,CAAC,EAAE,EAAE;cACvC,MAAMC,IAAI,GAAGI,MAAM,CAACL,CAAC,CAAC;cACtBD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;gBAClBV,OAAO,EAAE,KAAK;gBACdC,KAAK,EAAEa,MAAM,CAAC,CAAC,CAAC;gBAChBZ,IAAI,EAAEY,MAAM,CAAC,CAAC;cAChB,CAAC;YACH;YACA,OAAON,QAAQ;UACjB,CAAC,CAAC;QACJ,CAAC,CAAC,CACDS,KAAK,CAAEhB,KAAK,IAAK;UAChBT,QAAQ,CAAED,KAAK,IAAK;YAClB,MAAMiB,QAAQ,GAAG;cACf,GAAGjB;YACL,CAAC;YACD,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,OAAO,CAACD,MAAM,EAAEM,CAAC,EAAE,EAAE;cACvC,MAAMC,IAAI,GAAGN,OAAO,CAACK,CAAC,CAAC;cACvBD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;gBAClBV,OAAO,EAAE,KAAK;gBACdC,KAAK,EAAEA,KAAK;gBACZC,IAAI,EAAE;cACR,CAAC;YACH;YACA,OAAOM,QAAQ;UACjB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,EAAE,CAAC,CAAC;IACP;EACF,CAAC,EAAE,CAACnB,KAAK,EAAED,OAAO,CAAC,CAAC;EAEpB,oBACEP,OAAA,CAACC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,KAAK;MAAEE,KAAK;MAAEG;IAAQ,CAAE;IAAAR,QAAA,EACpDA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAG3B,CAAC;AAAAtC,EAAA,CAxFYF,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AA0FzB,OAAO,MAAM0C,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAElC,MAAMC,OAAO,GAAGjD,UAAU,CAACI,WAAW,CAAC;EAEvC8C,OAAO,CAACC,IAAI,CAAC,sDAAsD,CAAC;EAEpE,OAAOF,OAAO;AAEhB,CAAC;AAAAD,GAAA,CARYD,cAAc;AAU3B,OAAO,MAAMK,cAAc,GAAGA,CAAClC,IAAI,EAAEC,SAAS,EAAET,OAAO,KAAK;EAAA2C,GAAA;EAE1D,MAAM;IAAExC,KAAK;IAAEG;EAAQ,CAAC,GAAGhB,UAAU,CAACI,WAAW,CAAC;EAClD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM4D,UAAU,GAAGF,SAAS,IAAIzC,KAAK,CAACyC,SAAS,CAAC;EAChD,MAAMG,WAAW,GAAG3D,MAAM,CAAC,CAAC;EAE5B,IAAI,OAAOoB,IAAI,KAAK,QAAQ,EAAE,MAAM,IAAIwC,KAAK,CAAC,gCAAgC,CAAC;EAE/E7D,SAAS,CAAC,MAAM;IACd,MAAM8D,WAAW,GAAGzC,IAAI,GAAG0C,IAAI,CAACC,SAAS,CAAC1C,SAAS,IAAI,CAAC,CAAC,CAAC;IAC1D,IAAIsC,WAAW,CAACrC,OAAO,KAAKuC,WAAW,EAAE;IACzCT,OAAO,CAACY,GAAG,CAAC,MAAM,CAAC;IACnBL,WAAW,CAACrC,OAAO,GAAGuC,WAAW;IACjC,MAAM1C,EAAE,GAAG8C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzDlD,OAAO,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,SAAS,EAAET,OAAO,CAAC,CAAC;IACvC6C,YAAY,CAACtC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACC,IAAI,EAAEC,SAAS,EAAET,OAAO,EAAEM,OAAO,CAAC,CAAC;EAEvC,OAAOwC,UAAU,IAAI,CAAC,CAAC;AAEzB,CAAC;AAAAH,GAAA,CArBYD,cAAc;AAuB3B,OAAO,MAAMe,cAAc,GAAGA,CAACjD,IAAI,EAAER,OAAO,KAAK;EAAA0D,GAAA;EAE/C,MAAM;IAAEvD,KAAK;IAAEG;EAAQ,CAAC,GAAGhB,UAAU,CAACI,WAAW,CAAC;EAClD,MAAM,CAACkD,SAAS,EAAEC,YAAY,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM4D,UAAU,GAAGF,SAAS,IAAIzC,KAAK,CAACyC,SAAS,CAAC;EAEhD,MAAMe,OAAO,GAAGpE,WAAW,CAAEkB,SAAS,IAAK;IACzC,MAAMF,EAAE,GAAG8C,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAACC,QAAQ,CAAC,CAAC;IACzDlD,OAAO,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,SAAS,EAAET,OAAO,CAAC,CAAC;IACvC6C,YAAY,CAACtC,EAAE,CAAC;EAClB,CAAC,EAAE,CAACC,IAAI,EAAER,OAAO,EAAEM,OAAO,EAAEuC,YAAY,CAAC,CAAC;EAE1C,OAAO,CAACc,OAAO,EAAEb,UAAU,IAAI,CAAC,CAAC,CAAC;AACpC,CAAC;AAAAY,GAAA,CAbYD,cAAc;AAAA,IAAArB,EAAA;AAAAwB,YAAA,CAAAxB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}